name: Continuous Integration
on: [push]                      # Will make the workflow run every time you push to any branch

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest      # Sets the build environment a machine with the latest Ubuntu installed
    steps:
    - uses: actions/checkout@v2 # Checkout code
    
    - name: Builds the C# code       
      run: dotnet build              
       
    - name: Runs the C# tests       
      run: dotnet test              
       
    - name: Builds the typescript code.     
      working-directory: ./DotnetTemplate.Web
      run: | 
        npm install              
        npm run build
     
    - name: Runs the linter on the typescript code.       
      working-directory: ./DotnetTemplate.Web
      run: npm run lint           
      
    - name: Runs the typescript tests       
      working-directory: ./DotnetTemplate.Web
      run: npm t    
      
    - name: Docker hub login
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: beckycarter/dotnettemplate:thing-latest-${{github.sha}}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            username: 'action-slack',
            icon_emoji: ':partyparrot:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_COMMIT} from  ${process.env.AS_REPO} by ${process.env.AS_AUTHOR} is happy! Yippee!!!`,
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}   
      if: success()    
    
    - uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            username: 'action-slack',
            icon_emoji: ':sob:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_COMMIT} from ${process.env.AS_REPO} by ${process.env.AS_AUTHOR} is sad! Boo!!!`,
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
        MATRIX_CONTEXT: ${{ toJson(matrix) }} 
      if: failure()    
        
  # - uses: 8398a7/action-slack@v3
  #   with:
  #     status: ${{ job.status }}
  #     fields: repo,message,author,eventName,workflow,took # selectable (default: repo,message)
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
  #   if: always() # Pick up events even if the job fails or is canceled.
    
    
    
    
    #Builds the C# code.
    #Runs the C# tests.
    #Builds the typescript code.
    #Runs the linter on the typescript code.
    #Runs the typescript tests.
   